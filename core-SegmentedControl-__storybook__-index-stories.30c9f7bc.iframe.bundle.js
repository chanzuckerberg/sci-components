"use strict";(self.webpackChunk_czi_sds_monorepo=self.webpackChunk_czi_sds_monorepo||[]).push([[3328],{"./packages/components/src/core/SegmentedControl/__storybook__/index.stories.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{ControlledSegmentedControl:()=>ControlledSegmentedControl,Default:()=>Default,Test:()=>Test,WithDisabledButton:()=>WithDisabledButton,__namedExportsOrder:()=>__namedExportsOrder,default:()=>index_stories});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),SegmentedControl=__webpack_require__("./packages/components/src/core/SegmentedControl/index.tsx");const default_SegmentedControl=props=>{const{buttonDefinition,...rest}=props;return(0,jsx_runtime.jsx)(SegmentedControl.A,{buttonDefinition,...rest})},TestDemo=props=>{const{buttonDefinition}=props;return(0,jsx_runtime.jsx)(default_SegmentedControl,{buttonDefinition,"data-testid":"segmentedControl",...props})};var react=__webpack_require__("./node_modules/react/index.js");const index_stories={argTypes:{buttonDefinition:{control:{type:"object"}}},component:default_SegmentedControl,title:"Components/SegmentedControl"},Default={args:{buttonDefinition:[{icon:"List",tooltipText:"List A",value:"A"},{icon:"List",tooltipText:"List B",value:"B"},{icon:"List",tooltipText:"List C",value:"C"},{icon:"List",tooltipText:"List D",value:"D"}]},render:default_SegmentedControl},WithDisabledButton={args:{buttonDefinition:[{icon:"LinesHorizontal3",tooltipText:"List A",value:"A"},{disabled:!0,icon:"LinesHorizontal3",tooltipText:"List B",value:"B"},{icon:"LinesHorizontal3",tooltipText:"List C",value:"C"},{icon:"LinesHorizontal3",tooltipText:"List D",value:"D"}]},render:default_SegmentedControl},ControlledSegmentedControl={args:{buttonDefinition:[{icon:"List",tooltipText:"List A",value:"A"},{icon:"List",tooltipText:"List B",value:"B"},{icon:"List",tooltipText:"List C",value:"C"},{icon:"List",tooltipText:"List D",value:"D"}]},render:props=>{const{buttonDefinition,...rest}=props,[value,setValue]=(0,react.useState)("C");return(0,jsx_runtime.jsx)(SegmentedControl.A,{buttonDefinition,onChange:(_event,newValue)=>{console.log(newValue),setValue(newValue)},value,...rest})}},Test={args:{buttonDefinition:[{icon:"List",tooltipText:"List A",value:"A"},{icon:"List",tooltipText:"List B",value:"B"},{icon:"Table",tooltipText:"Table",value:"Table"},{icon:"People",tooltipText:"People",value:"People"}]},parameters:{controls:{exclude:["buttonDefinition"]},snapshot:{skip:!0}},render:args=>(0,jsx_runtime.jsx)(TestDemo,{...args})},__namedExportsOrder=["Default","WithDisabledButton","ControlledSegmentedControl","Test"];Default.parameters={...Default.parameters,docs:{...Default.parameters?.docs,source:{originalSource:'{\n  args: {\n    buttonDefinition: [{\n      icon: "List",\n      tooltipText: "List A",\n      value: "A"\n    }, {\n      icon: "List",\n      tooltipText: "List B",\n      value: "B"\n    }, {\n      icon: "List",\n      tooltipText: "List C",\n      value: "C"\n    }, {\n      icon: "List",\n      tooltipText: "List D",\n      value: "D"\n    }]\n  },\n  render: SegmentedControl\n}',...Default.parameters?.docs?.source}}},WithDisabledButton.parameters={...WithDisabledButton.parameters,docs:{...WithDisabledButton.parameters?.docs,source:{originalSource:'{\n  args: {\n    buttonDefinition: [{\n      icon: "LinesHorizontal3",\n      tooltipText: "List A",\n      value: "A"\n    }, {\n      disabled: true,\n      icon: "LinesHorizontal3",\n      tooltipText: "List B",\n      value: "B"\n    }, {\n      icon: "LinesHorizontal3",\n      tooltipText: "List C",\n      value: "C"\n    }, {\n      icon: "LinesHorizontal3",\n      tooltipText: "List D",\n      value: "D"\n    }]\n  },\n  render: SegmentedControl\n}',...WithDisabledButton.parameters?.docs?.source}}},ControlledSegmentedControl.parameters={...ControlledSegmentedControl.parameters,docs:{...ControlledSegmentedControl.parameters?.docs,source:{originalSource:'{\n  args: {\n    buttonDefinition: [{\n      icon: "List",\n      tooltipText: "List A",\n      value: "A"\n    }, {\n      icon: "List",\n      tooltipText: "List B",\n      value: "B"\n    }, {\n      icon: "List",\n      tooltipText: "List C",\n      value: "C"\n    }, {\n      icon: "List",\n      tooltipText: "List D",\n      value: "D"\n    }]\n  },\n  render: ControlledSegmentedControlDemo\n}',...ControlledSegmentedControl.parameters?.docs?.source}}},Test.parameters={...Test.parameters,docs:{...Test.parameters?.docs,source:{originalSource:'{\n  args: {\n    buttonDefinition: [{\n      icon: "List",\n      tooltipText: "List A",\n      value: "A"\n    }, {\n      icon: "List",\n      tooltipText: "List B",\n      value: "B"\n    }, {\n      icon: "Table",\n      tooltipText: "Table",\n      value: "Table"\n    }, {\n      icon: "People",\n      tooltipText: "People",\n      value: "People"\n    }]\n  },\n  parameters: {\n    controls: {\n      exclude: SEGMENTED_CONTROL_EXCLUDED_CONTROLS\n    },\n    snapshot: {\n      skip: true\n    }\n  },\n  render: (args: Args) => <TestDemo {...args} />\n}',...Test.parameters?.docs?.source}}}},"./packages/components/src/common/warnings.ts":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{S7:()=>showWarningIfFirstOccurence,oq:()=>SDSWarningTypes});var SDSWarningTypes=function(SDSWarningTypes){return SDSWarningTypes.ButtonMinimalIsAllCaps="buttonMinimalIsAllCaps",SDSWarningTypes.ButtonMissingSDSProps="buttonMissingProps",SDSWarningTypes.ButtonIconMissingIconProp="buttonIconMissingIconProp",SDSWarningTypes.ButtonDropdownMinimal="buttonDropdownMinimal",SDSWarningTypes.ButtonToggleMissingIconProp="buttonToggleMissingIconProp",SDSWarningTypes.ChipDeprecated="chipDeprecated",SDSWarningTypes.MenuSelectDeprecated="menuSelectDeprecated",SDSWarningTypes.TooltipSubtitle="tooltipSubtitle",SDSWarningTypes.TooltipWidth="tooltipWidth",SDSWarningTypes.TooltipInvertStyle="tooltipInvertStyle",SDSWarningTypes.ContentCardActionsOnlyButtons="contentCardActionsOnlyButtons",SDSWarningTypes.ClickableContentCardNumberOfButtons="clickableContentCardNumberOfButtons",SDSWarningTypes}({});const SDS_WARNINGS={buttonMinimalIsAllCaps:{hasWarned:!1,message:"Warning: isAllCaps can not be applied to buttons with sdsStyle='icon'."},buttonMissingProps:{hasWarned:!1,message:"Warning: Buttons without sdsStyle or sdsType props will be deprecated."},buttonIconMissingIconProp:{hasWarned:!1,message:"Warning: Buttons with an SDS type of icon require an icon prop to be provided."},buttonDropdownMinimal:{hasWarned:!1,message:"Warning: Button Dropdowns can not be of type minimal!"},buttonToggleMissingIconProp:{hasWarned:!1,message:"Warning: Button Toggles require an icon prop to be provided."},chipDeprecated:{hasWarned:!1,message:"Warning: <Chip /> will be deprecated and replaced with <Tag />"},menuSelectDeprecated:{hasWarned:!1,message:"Warning: MenuSelect will be deprecated and replaced with <DropdownMenu />"},tooltipSubtitle:{hasWarned:!1,message:"Warning: The 'subtitle' text is only available for dark tooltips!"},tooltipWidth:{hasWarned:!1,message:"Warning: The 'wide' width is only available for light tooltips!"},tooltipInvertStyle:{hasWarned:!1,message:"Warning: Tooltips using the inverted or sdsStyle prop will be deprecated. Please use hasInvertedStyle instead!"},contentCardActionsOnlyButtons:{hasWarned:!1,message:"Warning: Only SDS buttons could be used within ContentCard Actions component slot!"},clickableContentCardNumberOfButtons:{hasWarned:!1,message:"Warning: Clickable Content Cards can only have one or no buttons!"}},showWarningIfFirstOccurence=warningType=>{warningType in SDS_WARNINGS||(SDS_WARNINGS[warningType]={hasWarned:!1,message:`Warning: SDSWarningType ${warningType} is not defined in SDS_WARNINGS`}),SDS_WARNINGS[warningType].hasWarned||(console.warn(SDS_WARNINGS[warningType].message),SDS_WARNINGS[warningType].hasWarned=!0)}},"./packages/components/src/core/SegmentedControl/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>core_SegmentedControl});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),react=__webpack_require__("./node_modules/react/index.js"),Icon=__webpack_require__("./packages/components/src/core/Icon/index.tsx"),Tooltip=__webpack_require__("./packages/components/src/core/Tooltip/index.tsx"),ToggleButtonGroup=__webpack_require__("./node_modules/@mui/material/ToggleButtonGroup/ToggleButtonGroup.js"),toggleButtonClasses=__webpack_require__("./node_modules/@mui/material/ToggleButton/toggleButtonClasses.js"),ToggleButton=__webpack_require__("./node_modules/@mui/material/ToggleButton/ToggleButton.js"),emotion_styled_browser_esm=__webpack_require__("./node_modules/@emotion/styled/dist/emotion-styled.browser.esm.js"),a11y=__webpack_require__("./packages/components/src/core/styles/common/mixins/a11y.ts"),styles=__webpack_require__("./packages/components/src/core/styles/index.ts");const doNotForwardProps=["buttonDefinition"],StyledSegmentedControl=(0,emotion_styled_browser_esm.A)(ToggleButtonGroup.A,{shouldForwardProp:prop=>!doNotForwardProps.includes(prop),target:"e19h9cpv0"})((props=>{const spaces=(0,styles.oZ)(props),semanticColors=(0,styles.Bd)(props),corners=(0,styles.VP)(props);return`\n      box-shadow: inset 0 0 0 1px ${semanticColors?.base?.borderPrimary};\n      border-radius: ${corners?.l}px;\n      display: flex;\n      flex-direction: row;\n      justify-content: space-between;\n      gap: 1px;\n      width: fit-content;\n      padding: ${spaces?.xxxs}px;\n\n      &:hover {\n        box-shadow: inset 0 0 0 1px ${semanticColors?.base?.borderPrimaryHover};\n      }\n\n      .${toggleButtonClasses.A.root}.${toggleButtonClasses.A.disabled} {\n        border-color: transparent;\n      }\n\n      .${toggleButtonClasses.A.root}.${toggleButtonClasses.A.selected} {\n        background-color: ${semanticColors?.base?.fillOpen};\n        color: ${semanticColors?.accent?.ornamentSelected};\n        border-color: ${semanticColors?.base?.borderPrimary};\n\n        &:hover {\n          background-color: ${semanticColors?.base?.fillHover};\n          color: ${semanticColors?.base?.ornamentSecondaryHover};\n        }\n      }\n\n      .${toggleButtonClasses.A.root} {\n        ${(0,a11y.U)(props)}\n        background-color: transparent;\n        border: none;\n        line-height: 0px;\n        color: ${semanticColors?.base?.ornamentSecondary};\n        padding: ${spaces?.xxs}px ${spaces?.m}px;\n        border-radius: ${corners?.m}px;\n        margin: 0;\n\n        &:hover {\n          border-color: ${semanticColors?.base?.borderPrimary};\n          background-color: ${semanticColors?.base?.fillHover};\n          color: ${semanticColors?.base?.ornamentSecondaryHover};\n        }\n      }\n    `})),StyledToggleButton=(0,emotion_styled_browser_esm.A)(ToggleButton.A,{shouldForwardProp:prop=>!doNotForwardProps.includes(prop),target:"e19h9cpv1"})((props=>{const{disabled}=props,semanticColors=(0,styles.Bd)(props);return`\n      border: none !important;\n      svg {\n        color: ${disabled?semanticColors?.base?.ornamentDisabled:"currentColor"};\n      }\n    `})),core_SegmentedControl=props=>{const{buttonDefinition,value:valueProp,onChange:onChangeProp,...restProps}=props,initialValue=buttonDefinition.find((button=>!button.disabled))?.value||null,[active,setActive]=react.useState(initialValue),isControlled=void 0!==valueProp,value=isControlled?valueProp:active;return(0,jsx_runtime.jsxs)(StyledSegmentedControl,{"aria-label":"Segmented Control",size:"small",value,exclusive:!0,onChange:(event,newActive)=>{isControlled||setActive(newActive),onChangeProp&&onChangeProp(event,newActive)},...restProps,children:[buttonDefinition.map((button=>{const{icon,tooltipText,value:buttonValue,disabled=!1}=button,iconItem=icon?"string"!=typeof icon?icon:(0,jsx_runtime.jsx)(Icon.A,{sdsIcon:icon,sdsSize:"s"}):null,toggleButton=(0,jsx_runtime.jsx)(StyledToggleButton,{"aria-label":tooltipText??buttonValue,value:buttonValue,disabled,children:(0,jsx_runtime.jsx)("span",{tabIndex:-1,children:iconItem})},buttonValue);return disabled?toggleButton:(0,jsx_runtime.jsx)(Tooltip.A,{title:tooltipText??buttonValue,sdsStyle:"dark",arrow:!0,children:toggleButton},buttonValue)})),";"]})}},"./packages/components/src/core/Tooltip/index.tsx":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{A:()=>core_Tooltip});var jsx_runtime=__webpack_require__("./node_modules/react/jsx-runtime.js"),useTheme=__webpack_require__("./node_modules/@mui/material/styles/useTheme.js"),Tooltip_Tooltip=__webpack_require__("./node_modules/@mui/material/Tooltip/Tooltip.js"),react=__webpack_require__("./node_modules/react/index.js"),warnings=__webpack_require__("./packages/components/src/common/warnings.ts"),emotion_css_esm=__webpack_require__("./node_modules/@emotion/css/dist/emotion-css.esm.js"),Popper=__webpack_require__("./node_modules/@mui/material/Popper/Popper.js"),emotion_styled_browser_esm=__webpack_require__("./node_modules/@emotion/styled/dist/emotion-styled.browser.esm.js"),styles=__webpack_require__("./packages/components/src/core/styles/index.ts"),opacity=__webpack_require__("./packages/components/src/core/styles/common/utils/opacity.ts");const doNotForwardProps=["hasInvertedStyle","textAlign"],StyledTitle=(0,emotion_styled_browser_esm.A)("p",{shouldForwardProp:prop=>!doNotForwardProps.includes(prop),target:"eia838q0"})(styles.ql," ",(props=>{const{hasInvertedStyle}=props,semanticColors=(0,styles.Bd)(props);return`\n      margin: 0;\n      color: ${hasInvertedStyle?semanticColors?.base?.textPrimaryInverse:semanticColors?.base?.textPrimary};\n    `})),StyledSubtitle=(0,emotion_styled_browser_esm.A)("p",{shouldForwardProp:prop=>!doNotForwardProps.includes(prop),target:"eia838q1"})(styles.Pf," ",(props=>{const{hasInvertedStyle}=props,semanticColors=(0,styles.Bd)(props);return`\n      margin: 0;\n      color: ${hasInvertedStyle?semanticColors?.base?.textSecondaryInverse:semanticColors?.base?.textSecondary};\n    `})),tooltipCss=props=>{const{hasInvertedStyle=!0,inverted,sdsStyle,width,followCursor,textAlign}=props,shadows=(0,styles.CG)(props),corners=(0,styles.VP)(props),semanticColors=(0,styles.Bd)(props);return(0,emotion_css_esm.AH)("&.MuiTooltip-tooltip{border-radius:",corners?.l,"px;box-shadow:",shadows?.m,";max-width:","wide"===width?"550px":"250px"," !important;text-align:",textAlign||("wide"===width?"left":"center")," !important;",!hasInvertedStyle&&`outline: 1px solid ${(0,opacity.J)(semanticColors?.base?.borderSecondary||"#000000",15)};`," ","dark"===sdsStyle||inverted||hasInvertedStyle?(props=>{const spaces=(0,styles.oZ)(props),semanticColors=(0,styles.Bd)(props);return(0,emotion_css_esm.AH)((0,styles.Se)(props),"    background-color:",semanticColors?.base?.surfaceInverse,";color:",semanticColors?.base?.textPrimaryInverse,";padding:",spaces?.s,"px ",spaces?.m,"px;")})(props):(props=>{const spaces=(0,styles.oZ)(props),semanticColors=(0,styles.Bd)(props);return(0,emotion_css_esm.AH)((0,styles.Zo)(props),"    background-color:",semanticColors?.base?.surface,";color:",semanticColors?.base?.textPrimary,";padding:",spaces?.s,"px ",spaces?.m,"px;")})(props)," ",!0===followCursor&&(props=>{const spaces=(0,styles.oZ)(props);return(0,emotion_css_esm.AH)("padding:",spaces?.m,"px;")})(props),"}")},arrowCss=props=>{const{hasInvertedStyle,inverted,sdsStyle,arrowOffset}=props,semanticColors=(0,styles.Bd)(props);return(0,emotion_css_esm.AH)("&.MuiTooltip-arrow{left:",arrowOffset,"px !important;color:",hasInvertedStyle||inverted||"dark"===sdsStyle?semanticColors?.base?.surfaceInverse:semanticColors?.base?.surface,";&:before{box-sizing:border-box;width:12px;height:12px;}}")},StyledPopper=(0,emotion_styled_browser_esm.A)(Popper.A,{target:"eia838q2"})('&[data-popper-placement*="top"] .MuiTooltip-arrow{width:24px !important;height:12px !important;margin-bottom:-12px !important;&:before{transform:rotate(45deg) translate(0px,-2px);border-bottom-right-radius:2px;box-shadow:0 0 3px 2px rgba(0,0,0,0.1);}}&[data-popper-placement*="bottom"] .MuiTooltip-arrow{width:24px !important;height:12px !important;margin-top:-12px !important;&:before{transform:rotate(45deg) translate(-1px,2px);border-top-left-radius:2px;box-shadow:0 0 2px 0px rgba(0,0,0,0.1);}}&[data-popper-placement*="left"] .MuiTooltip-arrow{width:12px !important;height:16px !important;margin-right:-12px !important;&:before{transform:rotate(45deg) translate(-1px,1px);border-top-right-radius:2px;box-shadow:0 0 4px 0px rgba(0,0,0,0.1);}}&[data-popper-placement*="right"] .MuiTooltip-arrow{width:12px !important;height:16px !important;margin-left:-12px !important;&:before{transform:rotate(45deg) translate(4px,2px);border-bottom-left-radius:2px;box-shadow:0 0 4px 0px rgba(0,0,0,0.1);}}'),StyledComponentSlotWrapper=(0,emotion_styled_browser_esm.A)("div",{target:"eia838q3"})((props=>{const{shouldAddMargin}=props,spaces=(0,styles.oZ)(props);return`\n      margin-top: ${shouldAddMargin?spaces?.s:0}px;\n    `}));function invertStyleValue(inverted,sdsStyle,hasInvertedStyle){return void 0!==hasInvertedStyle?hasInvertedStyle:"dark"===sdsStyle||"light"!==sdsStyle&&inverted}function mergeClass({props,className,key}){const{classes}=props;if(!classes)return className;const propClassName=classes[key];return propClassName?`${propClassName} ${className}`:className}const core_Tooltip=(0,react.forwardRef)((function Tooltip(props,ref){const{arrowOffset,classes,hasInvertedStyle=!0,inverted,sdsStyle="dark",subtitle,title,width="default",PopperComponent=StyledPopper,textAlign,componentSlot,...rest}=props,{children}=rest;(inverted||sdsStyle)&&(0,warnings.S7)(warnings.oq.TooltipInvertStyle),"wide"!==width||"dark"!==sdsStyle&&!hasInvertedStyle||(0,warnings.S7)(warnings.oq.TooltipWidth);const theme=(0,useTheme.A)(),extraProps={arrowOffset,classes,hasInvertedStyle:invertStyleValue(inverted,sdsStyle,hasInvertedStyle),textAlign,theme,width},tooltip=mergeClass({className:tooltipCss(extraProps),key:"tooltip",props}),arrow=mergeClass({className:arrowCss(extraProps),key:"arrow",props});if(!title&&!subtitle&&!componentSlot)return(0,jsx_runtime.jsx)(jsx_runtime.Fragment,{children});const content=(0,jsx_runtime.jsxs)("div",{children:[title&&(0,jsx_runtime.jsx)(StyledTitle,{hasInvertedStyle,children:title}),subtitle&&(0,jsx_runtime.jsx)(StyledSubtitle,{hasInvertedStyle,children:subtitle}),componentSlot&&(0,jsx_runtime.jsx)(StyledComponentSlotWrapper,{shouldAddMargin:!!title||!!subtitle,children:componentSlot})]}),leaveDelay=hasInvertedStyle||inverted||"dark"===sdsStyle?0:500;return(0,jsx_runtime.jsx)(Tooltip_Tooltip.A,{classes:{arrow,tooltip},leaveDelay,title:content,PopperComponent,tabIndex:0,ref,arrow:!0,...rest})}))}}]);