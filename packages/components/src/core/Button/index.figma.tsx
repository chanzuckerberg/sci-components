import React from "react";
import Index from "./index";
import figma from "@figma/code-connect";

/**
 * -- This file was auto-generated by Code Connect --
 * `props` includes a mapping from your code props to Figma properties.
 * You should check this is correct, and update the `example` function
 * to return the code example you'd like to see in Figma
 */

figma.connect(
  Index,
  "https://www.figma.com/design/zedDsBDlmkLrKBTuJ4FAz7/Science-Design-System--v2-?node-id=8136%3A15986",
  {
    props: {
      // These props were automatically mapped based on your linked code:
      disabled: figma.enum("state", {
        disabled: true,
      }),
      type: figma.enum("sdsType", {
        destructive: "reset",
      }),
      sdsType: figma.enum("sdsType", {
        primary: "primary",
        secondary: "secondary",
        tertiary: "tertiary",
      }),
      icon: figma.instance("iconS – primary icon"),
      isAllCaps: figma.enum("isAllCaps?", {
        false: false,
        true: true,
      }),
      // No matching props could be found for these Figma properties:
      // "iconLeft": figma.boolean('iconLeft'),
      // "iconLeftRoundedSquare": figma.instance('↪️ iconLeft – rounded, square'),
      // "iconLeftMinimal": figma.instance('↪️ iconLeft – minimal'),
      // "iconMSecondaryIcon": figma.instance('iconM – secondary icon'),
      // "iconLSecondaryIcon": figma.instance('iconL – secondary icon'),
      // "iconSPrimaryIcon": figma.instance('iconS – primary icon'),
      // "iconMPrimaryIcon": figma.instance('iconM – primary icon'),
      // "iconLPrimaryIcon": figma.instance('iconL – primary icon'),
      // "iconSSecondaryIcon": figma.instance('iconS – secondary icon'),
      // "iconRight": figma.boolean('iconRight'),
      // "iconRightRoundedSquare": figma.instance('↪️ iconRight – rounded, square'),
      // "iconRightMinimal": figma.instance('↪️ iconRight – minimal'),
      // "sdsStyle": figma.enum('sdsStyle', {
      //   "icon": "icon",
      //   "minimal": "minimal",
      //   "rounded": "rounded",
      //   "square": "square"
      // }),
      // "size": figma.enum('size', {
      //   "-": "-",
      //   "l": "l",
      //   "m": "m",
      //   "s": "s"
      // })
    },
    example: (props) => (
      <Index
        disabled={props.disabled}
        type={props.type}
        sdsStyle="rounded"
        sdsType="primary"
        isAllCaps={props.isAllCaps}
      >
        Button Text
      </Index>
    ),
  }
);
