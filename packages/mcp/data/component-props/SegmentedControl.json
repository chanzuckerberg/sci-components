{
  "SegmentedControl": {
    "props": {
      "buttonDefinition": {
        "type": "SingleButtonDefinition[]",
        "isRequired": true
      },
      "children": {
        "type": "ReactNode",
        "isRequired": false,
        "description": "The content of the component."
      },
      "color": {
        "type": "\"standard\" | \"primary\" | \"secondary\" | \"error\" | \"info\" | \"success\" | \"warning\"",
        "isRequired": false,
        "description": "The color of the button when it is selected.\nIt supports both default and custom theme colors, which can be added as shown in the\n[palette customization guide](https://mui.com/material-ui/customization/palette/#custom-colors).",
        "defaultValue": "standard"
      },
      "disabled": {
        "type": "\"false\" | \"true\"",
        "isRequired": false,
        "description": "If `true`, the component is disabled. This implies that all ToggleButton children will be disabled.",
        "defaultValue": false
      },
      "fullWidth": {
        "type": "\"false\" | \"true\"",
        "isRequired": false,
        "description": "If `true`, the button group will take up the full width of its container.",
        "defaultValue": false
      },
      "onChange": {
        "type": "function",
        "isRequired": false,
        "description": "Callback fired when the value changes.\n@param event The event source of the callback.\n@param value of the selected buttons. When `exclusive` is true\nthis is a single value; when false an array of selected values. If no value\nis selected and `exclusive` is true the value is null; when false an empty array."
      },
      "size": {
        "type": "\"small\" | \"medium\" | \"large\"",
        "isRequired": false,
        "description": "The size of the component.",
        "defaultValue": "medium"
      },
      "value": {
        "type": "any",
        "isRequired": false,
        "description": "The currently selected value within the group or an array of selected\nvalues when `exclusive` is false.\n\nThe value must have reference equality with the option in order to be selected."
      },
      "className": {
        "type": "string",
        "isRequired": false
      },
      "id": {
        "type": "string",
        "isRequired": false
      },
      "style": {
        "type": "CSSProperties",
        "isRequired": false
      },
      "onClick": {
        "type": "function",
        "isRequired": false
      }
    }
  }
}