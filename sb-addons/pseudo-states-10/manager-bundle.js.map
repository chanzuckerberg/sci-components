{
  "version": 3,
  "sources": ["../../../node_modules/storybook-addon-pseudo-states/dist/chunk-OZNRRAVT.mjs", "global-externals:@storybook/manager-api", "global-externals:react", "global-externals:@storybook/components", "global-externals:@storybook/theming", "../../../node_modules/storybook-addon-pseudo-states/dist/manager.mjs"],
  "sourcesContent": ["// src/constants.ts\nvar ADDON_ID = \"storybook/pseudo-states\";\nvar TOOL_ID = `${ADDON_ID}/tool`;\nvar PARAM_KEY = \"pseudo\";\nvar EXCLUDED_PSEUDO_ELEMENTS = [\"::-webkit-scrollbar-thumb\"];\nvar PSEUDO_STATES = {\n  hover: \"hover\",\n  active: \"active\",\n  focusVisible: \"focus-visible\",\n  focusWithin: \"focus-within\",\n  focus: \"focus\",\n  visited: \"visited\",\n  link: \"link\",\n  target: \"target\"\n};\n\nexport {\n  ADDON_ID,\n  TOOL_ID,\n  PARAM_KEY,\n  EXCLUDED_PSEUDO_ELEMENTS,\n  PSEUDO_STATES\n};\n", "export default __STORYBOOKAPI__;\nconst { ActiveTabs, Consumer, ManagerContext, Provider, addons, combineParameters, controlOrMetaKey, controlOrMetaSymbol, eventMatchesShortcut, eventToShortcut, isMacLike, isShortcutTaken, keyToSymbol, merge, mockChannel, optionOrAltSymbol, shortcutMatchesShortcut, shortcutToHumanString, types, useAddonState, useArgTypes, useArgs, useChannel, useGlobalTypes, useGlobals, useParameter, useSharedState, useStoryPrepared, useStorybookApi, useStorybookState } = __STORYBOOKAPI__;\nexport { ActiveTabs, Consumer, ManagerContext, Provider, addons, combineParameters, controlOrMetaKey, controlOrMetaSymbol, eventMatchesShortcut, eventToShortcut, isMacLike, isShortcutTaken, keyToSymbol, merge, mockChannel, optionOrAltSymbol, shortcutMatchesShortcut, shortcutToHumanString, types, useAddonState, useArgTypes, useArgs, useChannel, useGlobalTypes, useGlobals, useParameter, useSharedState, useStoryPrepared, useStorybookApi, useStorybookState };", "export default __REACT__;\nconst { Children, Component, Fragment, Profiler, PureComponent, StrictMode, Suspense, __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, cloneElement, createContext, createElement, createFactory, createRef, forwardRef, isValidElement, lazy, memo, useCallback, useContext, useDebugValue, useEffect, useImperativeHandle, useLayoutEffect, useMemo, useReducer, useRef, useState, version } = __REACT__;\nexport { Children, Component, Fragment, Profiler, PureComponent, StrictMode, Suspense, __SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED, cloneElement, createContext, createElement, createFactory, createRef, forwardRef, isValidElement, lazy, memo, useCallback, useContext, useDebugValue, useEffect, useImperativeHandle, useLayoutEffect, useMemo, useReducer, useRef, useState, version };", "export default __STORYBOOKCOMPONENTS__;\nconst { A, ActionBar, AddonPanel, Badge, Bar, Blockquote, Button, ClipboardCode, Code, DL, Div, DocumentWrapper, ErrorFormatter, FlexBar, Form, H1, H2, H3, H4, H5, H6, HR, IconButton, IconButtonSkeleton, Icons, Img, LI, Link, ListItem, Loader, OL, P, Placeholder, Pre, ResetWrapper, ScrollArea, Separator, Spaced, Span, StorybookIcon, StorybookLogo, Symbols, SyntaxHighlighter, TT, TabBar, TabButton, TabWrapper, Table, Tabs, TabsState, TooltipLinkList, TooltipMessage, TooltipNote, UL, WithTooltip, WithTooltipPure, Zoom, codeCommon, components, createCopyToClipboardFunction, getStoryHref, icons, interleaveSeparators, nameSpaceClassNames, resetComponents, withReset } = __STORYBOOKCOMPONENTS__;\nexport { A, ActionBar, AddonPanel, Badge, Bar, Blockquote, Button, ClipboardCode, Code, DL, Div, DocumentWrapper, ErrorFormatter, FlexBar, Form, H1, H2, H3, H4, H5, H6, HR, IconButton, IconButtonSkeleton, Icons, Img, LI, Link, ListItem, Loader, OL, P, Placeholder, Pre, ResetWrapper, ScrollArea, Separator, Spaced, Span, StorybookIcon, StorybookLogo, Symbols, SyntaxHighlighter, TT, TabBar, TabButton, TabWrapper, Table, Tabs, TabsState, TooltipLinkList, TooltipMessage, TooltipNote, UL, WithTooltip, WithTooltipPure, Zoom, codeCommon, components, createCopyToClipboardFunction, getStoryHref, icons, interleaveSeparators, nameSpaceClassNames, resetComponents, withReset };", "export default __STORYBOOKTHEMING__;\nconst { CacheProvider, ClassNames, Global, ThemeProvider, background, color, convert, create, createCache, createGlobal, createReset, css, darken, ensure, ignoreSsrWarning, isPropValid, jsx, keyframes, lighten, styled, themes, typography, useTheme, withTheme } = __STORYBOOKTHEMING__;\nexport { CacheProvider, ClassNames, Global, ThemeProvider, background, color, convert, create, createCache, createGlobal, createReset, css, darken, ensure, ignoreSsrWarning, isPropValid, jsx, keyframes, lighten, styled, themes, typography, useTheme, withTheme };", "import {\n  ADDON_ID,\n  PARAM_KEY,\n  PSEUDO_STATES,\n  TOOL_ID\n} from \"./chunk-OZNRRAVT.mjs\";\n\n// src/manager.ts\nimport { addons, types } from \"@storybook/manager-api\";\n\n// src/manager/PseudoStateTool.tsx\nimport React, { useCallback } from \"react\";\nimport { Icons, IconButton, WithTooltip, TooltipLinkList } from \"@storybook/components\";\nimport { useGlobals } from \"@storybook/manager-api\";\nimport { styled, color } from \"@storybook/theming\";\nvar LinkTitle = styled.span(({ active }) => ({\n  color: active ? color.secondary : \"inherit\"\n}));\nvar LinkIcon = styled(Icons)(({ active }) => ({\n  opacity: active ? 1 : 0,\n  path: { fill: active ? color.secondary : \"inherit\" }\n}));\nvar options = Object.keys(PSEUDO_STATES).sort();\nvar PseudoStateTool = () => {\n  const [globals, updateGlobals] = useGlobals();\n  const pseudo = globals[PARAM_KEY];\n  const isActive = useCallback(\n    (option) => {\n      if (!pseudo)\n        return false;\n      return pseudo[option] === true;\n    },\n    [pseudo]\n  );\n  const toggleOption = useCallback(\n    (option) => () => {\n      updateGlobals({\n        [PARAM_KEY]: {\n          ...pseudo,\n          [option]: !isActive(option)\n        }\n      });\n    },\n    [pseudo]\n  );\n  return /* @__PURE__ */ React.createElement(\n    WithTooltip,\n    {\n      placement: \"top\",\n      trigger: \"click\",\n      tooltip: () => /* @__PURE__ */ React.createElement(\n        TooltipLinkList,\n        {\n          links: options.map((option) => ({\n            id: option,\n            title: /* @__PURE__ */ React.createElement(LinkTitle, { active: isActive(option) }, \":\", PSEUDO_STATES[option]),\n            right: /* @__PURE__ */ React.createElement(LinkIcon, { icon: \"check\", width: 12, height: 12, active: isActive(option) }),\n            onClick: toggleOption(option),\n            active: isActive(option)\n          }))\n        }\n      )\n    },\n    /* @__PURE__ */ React.createElement(\n      IconButton,\n      {\n        key: \"pseudo-state\",\n        title: \"Select CSS pseudo states\",\n        active: options.some(isActive)\n      },\n      /* @__PURE__ */ React.createElement(Icons, { icon: \"button\" })\n    )\n  );\n};\n\n// src/manager.ts\naddons.register(ADDON_ID, () => {\n  addons.add(TOOL_ID, {\n    type: types.TOOL,\n    title: \"CSS pseudo states\",\n    match: ({ viewMode }) => viewMode === \"story\",\n    render: PseudoStateTool\n  });\n});\n"],
  "mappings": "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",
  "names": ["ADDON_ID", "TOOL_ID", "PARAM_KEY", "PSEUDO_STATES", "manager_api_default", "ActiveTabs", "Consumer", "ManagerContext", "Provider", "addons", "combineParameters", "controlOrMetaKey", "controlOrMetaSymbol", "eventMatchesShortcut", "eventToShortcut", "isMacLike", "isShortcutTaken", "keyToSymbol", "merge", "mockChannel", "optionOrAltSymbol", "shortcutMatchesShortcut", "shortcutToHumanString", "types", "useAddonState", "useArgTypes", "useArgs", "useChannel", "useGlobalTypes", "useGlobals", "useParameter", "useSharedState", "useStoryPrepared", "useStorybookApi", "useStorybookState", "react_default", "Children", "Component", "Fragment", "Profiler", "PureComponent", "StrictMode", "Suspense", "__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED", "cloneElement", "createContext", "createElement", "createFactory", "createRef", "forwardRef", "isValidElement", "lazy", "memo", "useCallback", "useContext", "useDebugValue", "useEffect", "useImperativeHandle", "useLayoutEffect", "useMemo", "useReducer", "useRef", "useState", "version", "components_default", "A", "ActionBar", "AddonPanel", "Badge", "Bar", "Blockquote", "Button", "ClipboardCode", "Code", "DL", "Div", "DocumentWrapper", "ErrorFormatter", "FlexBar", "Form", "H1", "H2", "H3", "H4", "H5", "H6", "HR", "IconButton", "IconButtonSkeleton", "Icons", "Img", "LI", "Link", "ListItem", "Loader", "OL", "P", "Placeholder", "Pre", "ResetWrapper", "ScrollArea", "Separator", "Spaced", "Span", "StorybookIcon", "StorybookLogo", "Symbols", "SyntaxHighlighter", "TT", "TabBar", "TabButton", "TabWrapper", "Table", "Tabs", "TabsState", "TooltipLinkList", "TooltipMessage", "TooltipNote", "UL", "WithTooltip", "WithTooltipPure", "Zoom", "codeCommon", "components", "createCopyToClipboardFunction", "getStoryHref", "icons", "interleaveSeparators", "nameSpaceClassNames", "resetComponents", "withReset", "theming_default", "CacheProvider", "ClassNames", "Global", "ThemeProvider", "background", "color", "convert", "create", "createCache", "createGlobal", "createReset", "css", "darken", "ensure", "ignoreSsrWarning", "isPropValid", "jsx", "keyframes", "lighten", "styled", "themes", "typography", "useTheme", "withTheme", "LinkTitle", "styled", "active", "color", "LinkIcon", "Icons", "options", "PSEUDO_STATES", "PseudoStateTool", "globals", "updateGlobals", "useGlobals", "pseudo", "PARAM_KEY", "isActive", "useCallback", "option", "toggleOption", "react_default", "WithTooltip", "TooltipLinkList", "IconButton", "addons", "ADDON_ID", "TOOL_ID", "types", "viewMode"]
}
